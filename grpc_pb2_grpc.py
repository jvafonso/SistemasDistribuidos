# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import grpc_pb2 as grpc__pb2


class TodoStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.createItem = channel.unary_unary(
                '/grpcPackage.Todo/createItem',
                request_serializer=grpc__pb2.Item.SerializeToString,
                response_deserializer=grpc__pb2.Items.FromString,
                )
        self.returnItems = channel.unary_unary(
                '/grpcPackage.Todo/returnItems',
                request_serializer=grpc__pb2.voidNoParam.SerializeToString,
                response_deserializer=grpc__pb2.ItemsList.FromString,
                )
        self.getUser = channel.unary_unary(
                '/grpcPackage.Todo/getUser',
                request_serializer=grpc__pb2.getUserRequest.SerializeToString,
                response_deserializer=grpc__pb2.Items.FromString,
                )
        self.updateUser = channel.unary_unary(
                '/grpcPackage.Todo/updateUser',
                request_serializer=grpc__pb2.UpdateUserRequest.SerializeToString,
                response_deserializer=grpc__pb2.Items.FromString,
                )
        self.deleteUser = channel.unary_unary(
                '/grpcPackage.Todo/deleteUser',
                request_serializer=grpc__pb2.Item.SerializeToString,
                response_deserializer=grpc__pb2.Items.FromString,
                )
        self.returnError = channel.unary_unary(
                '/grpcPackage.Todo/returnError',
                request_serializer=grpc__pb2.voidNoParam.SerializeToString,
                response_deserializer=grpc__pb2.voidNoParam.FromString,
                )
        self.flushUserContent = channel.unary_unary(
                '/grpcPackage.Todo/flushUserContent',
                request_serializer=grpc__pb2.voidNoParam.SerializeToString,
                response_deserializer=grpc__pb2.voidNoParam.FromString,
                )


class TodoServicer(object):
    """Missing associated documentation comment in .proto file."""

    def createItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def returnItems(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def returnError(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def flushUserContent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TodoServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'createItem': grpc.unary_unary_rpc_method_handler(
                    servicer.createItem,
                    request_deserializer=grpc__pb2.Item.FromString,
                    response_serializer=grpc__pb2.Items.SerializeToString,
            ),
            'returnItems': grpc.unary_unary_rpc_method_handler(
                    servicer.returnItems,
                    request_deserializer=grpc__pb2.voidNoParam.FromString,
                    response_serializer=grpc__pb2.ItemsList.SerializeToString,
            ),
            'getUser': grpc.unary_unary_rpc_method_handler(
                    servicer.getUser,
                    request_deserializer=grpc__pb2.getUserRequest.FromString,
                    response_serializer=grpc__pb2.Items.SerializeToString,
            ),
            'updateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.updateUser,
                    request_deserializer=grpc__pb2.UpdateUserRequest.FromString,
                    response_serializer=grpc__pb2.Items.SerializeToString,
            ),
            'deleteUser': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteUser,
                    request_deserializer=grpc__pb2.Item.FromString,
                    response_serializer=grpc__pb2.Items.SerializeToString,
            ),
            'returnError': grpc.unary_unary_rpc_method_handler(
                    servicer.returnError,
                    request_deserializer=grpc__pb2.voidNoParam.FromString,
                    response_serializer=grpc__pb2.voidNoParam.SerializeToString,
            ),
            'flushUserContent': grpc.unary_unary_rpc_method_handler(
                    servicer.flushUserContent,
                    request_deserializer=grpc__pb2.voidNoParam.FromString,
                    response_serializer=grpc__pb2.voidNoParam.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpcPackage.Todo', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Todo(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def createItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpcPackage.Todo/createItem',
            grpc__pb2.Item.SerializeToString,
            grpc__pb2.Items.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def returnItems(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpcPackage.Todo/returnItems',
            grpc__pb2.voidNoParam.SerializeToString,
            grpc__pb2.ItemsList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpcPackage.Todo/getUser',
            grpc__pb2.getUserRequest.SerializeToString,
            grpc__pb2.Items.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpcPackage.Todo/updateUser',
            grpc__pb2.UpdateUserRequest.SerializeToString,
            grpc__pb2.Items.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpcPackage.Todo/deleteUser',
            grpc__pb2.Item.SerializeToString,
            grpc__pb2.Items.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def returnError(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpcPackage.Todo/returnError',
            grpc__pb2.voidNoParam.SerializeToString,
            grpc__pb2.voidNoParam.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def flushUserContent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpcPackage.Todo/flushUserContent',
            grpc__pb2.voidNoParam.SerializeToString,
            grpc__pb2.voidNoParam.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
